
#Использовать logos
#Использовать asserts

Перем юТест;
Перем Лог;

////////////////////////////////////////////////////////////////////
//{ Программный интерфейс

Функция ВыполнитьФичу(ФайлСценария) Экспорт
	Лог.Отладка("Подготовка к выполнению сценария "+ФайлСценария.ПолноеИмя);
	
	ПодключитьСценарий(ОбъединитьПути(ТекущийСценарий().Каталог, "gherkin-read.os"), "ЧитательGherkin");
	ЧитательГеркин = Новый ЧитательGherkin;

	Лог.Отладка("Читаю сценарий ");
	
	РезультатыРазбора = ЧитательГеркин.ПрочитатьФайлСценария(ФайлСценария);
	
	РезультатыВыполнения = ВыполнитьДеревоФич(ФайлСценария, РезультатыРазбора);
	
	Возврат РезультатыВыполнения;
КонецФункции

//}

Функция ВозможныеСтатусыВыполнения() Экспорт
	Рез = Новый Структура;
	Рез.Вставить("НеЗапускался", "Не запускался");
	Рез.Вставить("Упал", "Упал");
	Рез.Вставить("Пройден", "Пройден");
	Возврат Рез;
КонецФункции

////////////////////////////////////////////////////////////////////
//{ Реализация

Функция ВыполнитьДеревоФич(ФайлСценария, РезультатыРазбора)
	ДеревоФич = РезультатыРазбора.ДеревоФич;
	Ожидаем.Что(ДеревоФич, "Ожидали, что дерево фич будет передано как дерево значений, а это не так").ИмеетТип("ДеревоЗначений");
	
	РезультатыВыполнения = ДеревоФич.Скопировать();
	РезультатыВыполнения.Колонки.Добавить("СтатусВыполнения");
	
	ИсполнительШагов = НайтиИсполнителяШагов(ФайлСценария);

	Рефлектор = Новый Рефлектор;
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(ЭтотОбъект);
	МассивШагов = Рефлектор.ВызватьМетод(ИсполнительШагов, "ПолучитьСписокШагов", МассивПараметров);
	
	ИсполнительШагов.ЯНичегоНеДелаю();
	ИсполнительШагов.НичегоНеПроисходит();
	
	Возврат РезультатыВыполнения;
КонецФункции

Функция НайтиИсполнителяШагов(ФайлСценария)
	Лог.Отладка("Ищу исполнителя шагов в каталоге "+ФайлСценария.Путь);
	ПутьКИсполнителю = ОбъединитьПути(ФайлСценария.Путь, "step_definitions");
	ПутьКИсполнителю = ОбъединитьПути(ПутьКИсполнителю, ФайлСценария.ИмяБезРасширения+ ".os");
	
	ФайлИсполнителя = Новый Файл(ПутьКИсполнителю);
	Лог.Отладка("Ищу исполнителя шагов в файле "+ФайлИсполнителя.Имя);
	
	Если Не ФайлИсполнителя.Существует() Тогда
		ВызватьИсключение "Файл исполнителя шагов не найден."+ФайлИсполнителя.ПолноеИмя;
	КонецЕсли;
	ИсполнительШагов = ЗагрузитьСценарий(ФайлИсполнителя.ПолноеИмя);
	Возврат ИсполнительШагов;
КонецФункции

Функция Инициализация() 
	Лог = Логирование.ПолучитьЛог("oscript.app.bdd-exec");
	// Лог.УстановитьУровень(УровниЛога.Отладка);
	
КонецФункции

// }

///////////////////////////////////////////////////////////////////
// Точка входа

Инициализация();
