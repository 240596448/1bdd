
#Использовать logos
#Использовать asserts

Перем юТест;
Перем Лог;

Перем СоответствиеЯзыкКлючевыеСлова;
Перем СоответствиеКлючевыеСлова;
Перем Язык;

////////////////////////////////////////////////////////////////////
// Программный интерфейс

Функция ПрочитатьФайлСценария(ФайлСценария) Экспорт
	Лог.Отладка("Читаю сценарий "+ФайлСценария.ПолноеИмя);
	Фича = Новый ЧтениеТекста(ФайлСценария.ПолноеИмя, "UTF-8");
	
	СтруктураФичи = РазобратьТекстФичи(Фича);
	МассивЛексем = СтруктураФичи.МассивЛексем;

	Фича.Закрыть();

	Возврат СтруктураФичи;
КонецФункции

Функция ВозможныеКлючевыеСлова() Экспорт
	Рез = Новый Структура;
	Рез.Вставить("Допустим", "given");
	Рез.Вставить("Когда", "when");
	Рез.Вставить("Тогда", "then");
	Рез.Вставить("Также", "and");
	Рез.Вставить("Но", "feature");
	Рез.Вставить("Функциональность", "feature");
	Рез.Вставить("Контекст", "background");
	Рез.Вставить("Сценарий", "scenario");
	Рез.Вставить("структураСценария", "scenario_outline");
	Рез.Вставить("Примеры", "examples");
	Возврат Рез;
КонецФункции



////////////////////////////////////////////////////////////////////
// Реализация

Функция РазобратьТекстФичи(Фича)
	
	ВозможныеТипыНачалаСтроки = ВозможныеТипыНачалаСтроки();
	РезультатыРазбора = Новый Структура;	

	МассивЛексем = Новый Массив;
	
	Пока Истина Цикл
		ОчереднаяСтрока = ПолучитьОчереднуюСтрокуСценария(Фича);
		Если ОчереднаяСтрока = Неопределено Тогда
			Прервать;
		КонецЕсли;
		
		ПервыйСимвол = Лев(ОчереднаяСтрока, 1);
		Если ПервыйСимвол = ВозможныеТипыНачалаСтроки.Комментарий Тогда
			Лог.Отладка("	Первый символ строки - это комментарий");
			НовыйЯзык = ПолучитьЯзыкФичи(ОчереднаяСтрока);
			Если ЗначениеЗаполнено(НовыйЯзык) Тогда
				Язык = НовыйЯзык;
				СоответствиеКлючевыеСлова = СоответствиеЯзыкКлючевыеСлова.Получить(Язык);
				Лог.Отладка("	Получили язык фичи "+Язык);
			КонецЕсли;
			Продолжить;
			
		ИначеЕсли ПервыйСимвол = ВозможныеТипыНачалаСтроки.Метка Тогда
			Лог.Отладка("	Первый символ строки - это метка. Пропускаю строку");
			Продолжить;
			
		ИначеЕсли ПервыйСимвол = ВозможныеТипыНачалаСтроки.Пример Тогда
			ВызватьИсключение "Обработка примеров пока не реализована";
		КонецЕсли;

		Ожидаем.Что(Язык, "Ожидали, что найдем язык будет найден "+Язык+", но не нашли").Заполнено();
		
		ПараметрыЛексемы = НайтиЛексему(НРег(ОчереднаяСтрока));
		Если ЗначениеЗаполнено(ПараметрыЛексемы) Тогда
			ОчереднаяЛексема = ПараметрыЛексемы.Лексема;
			МассивЛексем.Добавить(ПараметрыЛексемы);
		КонецЕсли;
	КонецЦикла;

	РезультатыРазбора.Вставить("Язык", Язык);
	РезультатыРазбора.Вставить("МассивЛексем", МассивЛексем);
	Возврат РезультатыРазбора;
КонецФункции

Функция НайтиЛексему(Строка)
	Лог.Отладка("Ищу лексему");
	Ожидаем.Что(СоответствиеКлючевыеСлова, "Ожидали, что найдем ключевые слова для языка "+Язык+", но не нашли").Заполнено();
	
	Для каждого КлючЗначение Из СоответствиеКлючевыеСлова Цикл
		Лексема = КлючЗначение.Ключ;
		Позиция = Найти(Строка, Лексема);
		Если Позиция = 1 Тогда
			Рез = Новый Структура;
			Рез.Вставить("Лексема", КлючЗначение.Значение);
			
			ПраваяЧасть = СокрЛП(Сред(Строка, СтрДлина(Лексема)+1));
			Символ = Лев(ПраваяЧасть, 1);
			Если (Символ=" ") или (Символ=":") или (Символ=",") Тогда
				ПраваяЧасть = СокрЛП(Сред(ПраваяЧасть, 2));
			КонецЕсли;
			
			Рез.Вставить("ПраваяЧасть", ПраваяЧасть);
			лог.Отладка("Нашел лексему <"+Рез.Лексема+">, правая часть <"+ПраваяЧасть+">");
			Возврат Рез;
		КонецЕсли;
	КонецЦикла;
	Возврат Неопределено;
КонецФункции

Функция ПолучитьОчереднуюСтрокуСценария(Фича)
	Рез = "";
	Пока Истина Цикл
		ОчереднаяСтрока = Фича.ПрочитатьСтроку();
		Если ОчереднаяСтрока = Неопределено Тогда
			Лог.Отладка("Строки фичи закончились");
			Возврат Неопределено;
		КонецЕсли;	

		Рез = СокрЛП(ОчереднаяСтрока);
		Если Не ПустаяСтрока(Рез) Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;	
	
	Лог.Отладка("Очередная строка фичи <"+Рез+">");
	Возврат Рез;
КонецФункции

Функция ВозможныеТипыНачалаСтроки()
	Рез = Новый Структура;
	Рез.Вставить("Комментарий", "#");
	Рез.Вставить("Метка", "@");
	Рез.Вставить("Пример", "|");
	Рез.Вставить("ОбычныйТекст", 1);
	Возврат Рез;
КонецФункции

Функция ПолучитьЯзыкФичи(ОчереднаяСтрока)
	Перем МЕТКА_ЯЗЫКА;
	
	МЕТКА_ЯЗЫКА = "language:";

	Язык = "";
	Поз = Найти(ОчереднаяСтрока, МЕТКА_ЯЗЫКА);
	Если  Поз > 0 Тогда
		Язык = СокрЛП(Сред(ОчереднаяСтрока, Поз+СтрДлина(МЕТКА_ЯЗЫКА)));
	КонецЕсли;
	Возврат Язык;
КонецФункции

Функция Инициализация() 
	Лог = Логирование.ПолучитьЛог("oscript.app.bdd-gen");
	Лог.УстановитьУровень(УровниЛога.Отладка);
	
	Язык = "ru";
	
	СоответствиеЯзыкКлючевыеСлова = Создать_СоответствиеЯзыкКлючевыеСлова();
	СоответствиеКлючевыеСлова = СоответствиеЯзыкКлючевыеСлова.Получить(Язык);
КонецФункции

Функция Создать_СоответствиеЯзыкКлючевыеСлова()
	Рез = Новый Соответствие;
	Рез.Вставить("ru", СоздатьСоответствиеКлючевыхСлов_ru());
	Возврат Рез;
КонецФункции

Функция СоздатьСоответствиеКлючевыхСлов_ru()
	Рез = Новый Соответствие;
	
	Рез.Вставить("допустим","given");
	Рез.Вставить("дано","given");
	Рез.Вставить("пусть","given");
	
	Рез.Вставить("если","when");
	Рез.Вставить("когда","when");
	
	Рез.Вставить("тогда","then");
	Рез.Вставить("то","then");
	
	Рез.Вставить("и","and");
	Рез.Вставить("к тому же","and");
	Рез.Вставить("также","and");
	
	Рез.Вставить("но","but");
	Рез.Вставить("а","but");
	
	Рез.Вставить("функциональность","feature");
	Рез.Вставить("функционал","feature");
	Рез.Вставить("функция","feature");
	Рез.Вставить("свойство","feature");
	
	Рез.Вставить("предыстория","background");
	Рез.Вставить("контекст","background");	
	Рез.Вставить("сценарий","scenario");
	Рез.Вставить("структура сценария","scenario_outline");
	
	Рез.Вставить("примеры","examples");
	
	Возврат Рез;
КонецФункции

///////////////////////////////////////////////////////////////////
// Точка входа

Инициализация();
