Перем ТипыСостоянияJUnit;

Процедура Сформировать(Знач РезультатыВыполнения, Знач СтатусВыполнения, Знач ПутьОтчетаJUnit) Экспорт
    // ДатаНачала = Неопределено;
    ИсполнительБДД = Новый ИсполнительБДД;
    ЧитательГеркин = Новый ЧитательГеркин;
    ВозможныеТипыШагов = ЧитательГеркин.ВозможныеТипыШагов();
    
    ТипШага_Функциональность = ВозможныеТипыШагов.Функциональность; 
    МассивШагов = Новый Массив;
    МассивШагов.Добавить(ТипШага_Функциональность);
    МассивШагов.Добавить(ВозможныеТипыШагов.Сценарий);
    СтруктураИтогов = ИсполнительБДД.ПолучитьИтоговыеРезультатыВыполнения(РезультатыВыполнения, МассивШагов);
    
    ЗаписьXML = Новый ЗаписьXML;
    ЗаписьXML.УстановитьСтроку("UTF-8");
    ЗаписьXML.ЗаписатьОбъявлениеXML();
    
    ВозможныеСтатусыВыполнения = ИсполнительБДД.ВозможныеСтатусыВыполнения();
    КоличествоОшибок = СтруктураИтогов[ТипШага_Функциональность][ВозможныеСтатусыВыполнения.Сломался];
    КоличествоНереализованныхТестов = СтруктураИтогов[ТипШага_Функциональность][ВозможныеСтатусыВыполнения.НеРеализован];
    ВсегоТестов = СтруктураИтогов[ТипШага_Функциональность][ВозможныеСтатусыВыполнения.Пройден] + КоличествоОшибок + КоличествоНереализованныхТестов;
    
    // // ВремяВыполнения = ТекущаяДата() - ДатаНачала;
    ВремяВыполнения = 0;//TODO вычислять время выполнения прогона фич, шагов и сценариев
    
    ЗаписьXML.ЗаписатьНачалоЭлемента("testsuites");
    ЗаписьXML.ЗаписатьАтрибут("name", XMLСтрока("1bdd"));
    ЗаписьXML.ЗаписатьАтрибут("time", XMLСтрока(ВремяВыполнения));
    ЗаписьXML.ЗаписатьАтрибут("tests", XMLСтрока(ВсегоТестов));
    ЗаписьXML.ЗаписатьАтрибут("failures", XMLСтрока(КоличествоОшибок));
    ЗаписьXML.ЗаписатьАтрибут("skipped", XMLСтрока(КоличествоНереализованныхТестов)); // или disabled
    
    Для каждого Узел Из РезультатыВыполнения.Строки Цикл
        ЗаписьXML.ЗаписатьНачалоЭлемента("testsuite");	
        
        ЗаписьXML.ЗаписатьАтрибут("name", Узел.Тело);
        
        ЗаписьXML.ЗаписатьНачалоЭлемента("properties");//TODO нужен ли пустой блок properties	
        ЗаписьXML.ЗаписатьКонецЭлемента();
        
        Для Каждого УзелСценария Из Узел.Строки Цикл
            Если УзелСценария.ТипШага = ВозможныеТипыШагов.Сценарий Тогда
                ЗаполнитьРезультатТестовогоСлучая(ЗаписьXML, УзелСценария);
            КонецЕсли;
        КонецЦикла;	
        
        ЗаписьXML.ЗаписатьКонецЭлемента();
    КонецЦикла;
    
    ЗаписьXML.ЗаписатьКонецЭлемента();
    
    СтрокаХМЛ = ЗаписьXML.Закрыть();
    
    ФайлОтчета = Новый Файл(ПутьОтчетаJUnit);
    
    ЗаписьXML = Новый ЗаписьXML;
    ЗаписьXML.ОткрытьФайл(ФайлОтчета.ПолноеИмя);
    ЗаписьXML.ЗаписатьБезОбработки(СтрокаХМЛ);// таким образом файл будет записан всего один раз, и не будет проблем с обработкой на билд-сервере TeamCity
    ЗаписьXML.Закрыть();
    Сообщить(" ");
    Сообщить("Путь к лог-файлу проверки в формате Ant.JUnit <"+ФайлОтчета.ПолноеИмя+">");
    
КонецПроцедуры

Процедура ЗаполнитьРезультатТестовогоСлучая(ЗаписьXML, УзелСценария)
    
    ЗаписьXML.ЗаписатьНачалоЭлемента("testcase");
    ЗаписьXML.ЗаписатьАтрибут("classname", УзелСценария.Тело);//TODO решить, какое выбрать classname для сценария
    ЗаписьXML.ЗаписатьАтрибут("name", УзелСценария.Тело);
    
    ЗаписьXML.ЗаписатьАтрибут("status", ПолучитьТипыСостоянияJUnit()[УзелСценария.СтатусВыполнения]);
    
    // 	ЗаписьXML.ЗаписатьНачалоЭлемента(СтрокаРезультат);
    
    // 	СтрокаОписание = СтруктураОшибки.Описание;
    // 	// TODO: НайтиНедопустимыеСимволыXML()
    // 	XMLОписание = XMLСтрока(СтрокаОписание); 
    // 	ЗаписьXML.ЗаписатьАтрибут("message", XMLОписание);
    
    // 	ЗаписьXML.ЗаписатьКонецЭлемента();
    // Иначе
    // 	ЗаписьXML.ЗаписатьАтрибут("status", "passed");
    // КонецЕсли;
    
    ЗаписьXML.ЗаписатьКонецЭлемента();
    
КонецПроцедуры

Функция ПолучитьТипыСостоянияJUnit()
    Если ТипыСостоянияJUnit = Неопределено Тогда
        ИсполнительБДД = Новый ИсполнительБДД;
        ВозможныеСтатусыВыполнения = ИсполнительБДД.ВозможныеСтатусыВыполнения();
        
        ТипыСостоянияJUnit = Новый Соответствие;
        ТипыСостоянияJUnit.Вставить(ВозможныеСтатусыВыполнения.Пройден, "passed");
        ТипыСостоянияJUnit.Вставить(ВозможныеСтатусыВыполнения.Сломался, "failure");
        ТипыСостоянияJUnit.Вставить(ВозможныеСтатусыВыполнения.НеРеализован, "skipped");
        ТипыСостоянияJUnit = Новый ФиксированноеСоответствие(ТипыСостоянияJUnit);
    КонецЕсли;
    Возврат ТипыСостоянияJUnit;
КонецФункции // ПолучитьТипыСостоянияJUnit()