
/////////////////////////////////////////////////////////////////////////////////////////////////
//
// Тест для генератора BDD-шагов сценария в формате OneScript на базе файлов Gherkin
//
/////////////////////////////////////////////////////////////////////////////////////////////////

#Использовать logos
#Использовать asserts

Перем юТест;
Перем Лог;
Перем ГенераторБДД;

Функция ПолучитьСписокТестов(Знач ЮнитТестирование) Экспорт

	юТест = ЮнитТестирование;
		
	МассивТестов = Новый Массив;
	МассивТестов.Добавить("Тест_ДолженПрочитатьФайлФичи");
	
	Возврат МассивТестов;

КонецФункции

Процедура Тест_ДолженПрочитатьФайлФичи() Экспорт
	ГенераторБДД = Новый ГенераторBDD;
	ВозможныеКлючевыеСлова = ГенераторБДД.ВозможныеКлючевыеСлова();
	
	ФайлСценария = Новый Файл(ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures\НичегоНеДелаю.feature"));
	
	РезультатыРазбора = ГенераторБДД.ПрочитатьФайлСценария(ФайлСценария);
	
	Ожидаем.Что(РезультатыРазбора).ИмеетТип("Структура");
	Ожидаем.Что(РезультатыРазбора.Язык).Равно("ru");
	
	МассивЛексем = РезультатыРазбора.МассивЛексем;
	Ожидаем.Что(МассивЛексем, "Ожидали, что найдем правильное число лексем").ИмеетДлину(4);
	Ожидаем.Что(МассивЛексем[0].Лексема, "Ожидали, что найдем правильное число лексем").Равно(ВозможныеКлючевыеСлова.Функциональность);
	Ожидаем.Что(МассивЛексем[1].Лексема, "Ожидали, что найдем правильное число лексем").Равно(ВозможныеКлючевыеСлова.Сценарий);
	Ожидаем.Что(МассивЛексем[2].Лексема, "Ожидали, что найдем правильное число лексем").Равно(ВозможныеКлючевыеСлова.Когда);
	Ожидаем.Что(МассивЛексем[3].Лексема, "Ожидали, что найдем правильное число лексем").Равно(ВозможныеКлючевыеСлова.Тогда);
КонецПроцедуры

	// юТест.ПроверитьРавенство(ПривестиОкончанияСтрок(ОбъектСтрокой), ПривестиОкончанияСтрок(тестовыйJSON));
	
// Функция ПривестиОкончанияСтрок(Знач ИсходныйТекст)
	// Возврат СтрЗаменить(ИсходныйТекст, Символы.ВК + Символы.ПС, Символы.ПС);
// КонецФункции

////////////////////////////////////////////////////////////////////
// Программный интерфейс

Функция Инициализация() 
	Лог = Логирование.ПолучитьЛог("oscript.app.bdd-tests");
	Лог.УстановитьУровень(УровниЛога.Отладка);
	ДопЛог = Логирование.ПолучитьЛог("oscript.app.bdd-gen");
	ДопЛог.УстановитьУровень(Лог.Уровень());

	//КаталогСкрипта = Новый Файл(ТекущийСценарий().Источник).Путь;
	ПодключитьСценарий(ОбъединитьПути(ТекущийСценарий().Каталог, "../src/bdd-gen.os"), "ГенераторBDD");
	ГенераторБДД = Новый ГенераторBDD;

КонецФункции

///////////////////////////////////////////////////////////////////
// Точка входа

Инициализация();
