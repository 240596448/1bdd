#Использовать logos

Перем БДД;

Перем Лог;
Перем ПомощникТестирования;

// TODO следующие экспорты нужны для работы соседних скриптов/шагов до появления повторно используемых шагов
Перем ВременныйКаталогФичи Экспорт;

Функция ПолучитьСписокШагов(КонтекстФреймворкаBDD) Экспорт
	БДД = КонтекстФреймворкаBDD;

	ВсеШаги = Новый Массив;

	ВсеШаги.Добавить("ЯВыполнилПодключениеТестовогоСкрипта");
	ВсеШаги.Добавить("ЯПодготовилТестовыйКаталогДляФич");
	ВсеШаги.Добавить("УстановилТестовыйКаталогКакТекущий");
	ВсеШаги.Добавить("ЯПодготовилСпециальнуюТестовуюФичу");
	ВсеШаги.Добавить("ЯПодставилФайлШаговСУжеРеализованнымиШагамиДляФичи");
	ВсеШаги.Добавить("ЯСоздалФайлФичиСТекстом");
	ВсеШаги.Добавить("ЯЗапустилВыполнениеФичиСПередачейПараметра");
	ВсеШаги.Добавить("ПроверкаПоведенияФичиЗакончиласьСКодомВозврата");

	Возврат ВсеШаги;
КонецФункции

//я выполнил подключение тестового скрипта "ПроверкаГенерации"
Процедура ЯВыполнилПодключениеТестовогоСкрипта(Знач ИмяСкрипта) Экспорт
	ПомощникТестирования = ЗагрузитьСценарий(ОбъединитьПути(ТекущийСценарий().Каталог, ИмяСкрипта+".os"));

	ДопЛог = Логирование.ПолучитьЛог(ПомощникТестирования.ИмяЛога());
	ДопЛог.УстановитьУровень(Лог.Уровень());
КонецПроцедуры

//я подготовил тестовый каталог для фич
Процедура ЯПодготовилТестовыйКаталогДляФич() Экспорт
	ПомощникТестирования.ЯПодготовилТестовыйКаталогДляФич();
КонецПроцедуры

//установил тестовый каталог как текущий
Процедура УстановилТестовыйКаталогКакТекущий() Экспорт
	ПомощникТестирования.УстановилТестовыйКаталогКакТекущий();
КонецПроцедуры

//я подготовил специальную тестовую фичу "ПередачаПараметров"
Процедура ЯПодготовилСпециальнуюТестовуюФичу(Знач ИмяФичи) Экспорт
	ПомощникТестирования.ЯПодготовилСпециальнуюТестовуюФичу(ИмяФичи);
КонецПроцедуры

//я подставил файл шагов с уже реализованными шагами для фичи "ПередачаПараметров"
Процедура ЯПодставилФайлШаговСУжеРеализованнымиШагамиДляФичи(Знач ИмяФичи) Экспорт
	ПомощникТестирования.ЯПодставилФайлШаговСУжеРеализованнымиШагамиДляФичи(ИмяФичи);
КонецПроцедуры

//я создал файл фичи "ФичаБезШагов" с текстом
//"""
//# language: ru
//Функционал: Библиотечные шаги
//Сценарий: Использование шагов из другой фичи
//	Когда я передаю параметр "Минимальный"
//	Тогда я получаю параметр "Минимальный"
//"""
Процедура ЯСоздалФайлФичиСТекстом(Знач ИмяФичи, Знач ТекстФичи) Экспорт
	ПомощникТестирования.ЯСоздалФайлФичиСТекстом(ИмяФичи, ТекстФичи);
КонецПроцедуры

//я запустил выполнение фичи "ФичаБезШагов" с передачей параметра "-require СтруктураСценария.feature"
Процедура ЯЗапустилВыполнениеФичиСПередачейПараметра(Знач ИмяФичи, Знач ПараметрыКоманднойСтроки) Экспорт
	ПомощникТестирования.ЯЗапустилВыполнениеФичиСПередачейПараметра(ИмяФичи, ПараметрыКоманднойСтроки);
КонецПроцедуры

//проверка поведения фичи "ФичаБезШагов" закончилась с кодом возврата 0
Процедура ПроверкаПоведенияФичиЗакончиласьСКодомВозврата(Знач ИмяФичиИлиПутьКаталога, ОжидаемыйКодВозврата) Экспорт
	ПомощникТестирования.ПроверкаПоведенияФичиЗакончиласьСКодомВозврата(ИмяФичиИлиПутьКаталога, ОжидаемыйКодВозврата);
КонецПроцедуры


Лог = Логирование.ПолучитьЛог("bdd.ПроверкаБиблиотечныхШагов.feature");
Лог.УстановитьУровень(УровниЛога.Отладка);
