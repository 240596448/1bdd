#Использовать asserts

Перем БДД;
//Перем Журнал;
Перем КлючЖурнала;
Перем ИсходныйПараметр;
Перем ТипИсходногоПараметра;
Перем ИсходныйПараметр2;
Перем ТипИсходногоПараметра2;

Функция ПолучитьСписокШагов(КонтекстФреймворкаBDD) Экспорт
	БДД = КонтекстФреймворкаBDD;

	ВсеШаги = Новый Массив;

	ВсеШаги.Добавить("ЯПередаюПараметр");
	ВсеШаги.Добавить("ЯПолучаюПараметрСТипом");
	ВсеШаги.Добавить("ЯИспользуюСтроку_В_Которой_Есть_Минус");
	ВсеШаги.Добавить("КоличествоСтрокУПараметраРавно");
	ВсеШаги.Добавить("СтрокаУПараметраРавна");
	ВсеШаги.Добавить("ЯПередаюДваПараметраРазныхТиповИ");
	ВсеШаги.Добавить("ЯВПервомПараметреПолучаюЗначение");
	ВсеШаги.Добавить("ЯВВторомПараметреПолучаюЗначение");
	ВсеШаги.Добавить("ЯВПервомПараметреПолучаюЗначениеСТипом");
	ВсеШаги.Добавить("ЯВВторомПараметреПолучаюЗначениеСТипом");

	Возврат ВсеШаги;
КонецФункции

//я передаю параметр 11.02.2010
Процедура ЯПередаюПараметр(Парам) Экспорт
	ДобавитьВЖурнал("ЯПередаюПараметр", Парам);
	ИсходныйПараметр = Парам;
	ТипИсходногоПараметра = ТипЗнч(Парам);
КонецПроцедуры

//я получаю параметр с типом "Дата"
Процедура ЯПолучаюПараметрСТипом(СтрокаТип) Экспорт
	ДобавитьВЖурнал("ЯПолучаюПараметрСТипом", СтрокаТип);
	Ожидаем.Что(""+СтрокаТип, СтрШаблон("Ожидаем, что был передан параметр %1 с типом %2, а это не так",
		ИсходныйПараметр, ТипИсходногоПараметра)).Равно(""+ТипИсходногоПараметра);
КонецПроцедуры

//я использую строку-в-которой-есть-минус
Процедура ЯИспользуюСтроку_в_которой_есть_минус() Экспорт
	ДобавитьВЖурнал("ЯИспользуюСтроку_в_которой_есть_минус");
КонецПроцедуры

//количество строк у параметра равно 2
Процедура КоличествоСтрокУПараметраРавно(ЧислоСтрок) Экспорт
	Ожидаем.Что(СтрЧислоСтрок(ИсходныйПараметр), "СтрЧислоСтрок(ИсходныйПараметр)").Равно(ЧислоСтрок);
КонецПроцедуры

//1 строка у параметра равна "первая строка"
Процедура СтрокаУПараметраРавна(НомерСтроки, СтрокаПоНомеру) Экспорт
	ОжидаемаяСтрока = "первая строка";
	Если НомерСтроки = 2 Тогда
		ОжидаемаяСтрока = "вторая строка";
	КонецЕсли;
	Ожидаем.Что(СтрПолучитьСтроку(ИсходныйПараметр, НомерСтроки), "СтрПолучитьСтроку(ИсходныйПараметр, НомерСтроки)").Равно(ОжидаемаяСтрока);
КонецПроцедуры

//я передаю два параметра разных типов 1 и "Строка1"
Процедура ЯПередаюДваПараметраРазныхТиповИ(Парам1, Парам2) Экспорт
	ИсходныйПараметр = Парам1;
	ТипИсходногоПараметра = ТипЗнч(Парам1);
	ИсходныйПараметр2 = Парам2;
	ТипИсходногоПараметра2 = ТипЗнч(Парам2);
КонецПроцедуры

//я в первом параметре получаю значение с типом "Строка"
Процедура ЯВПервомПараметреПолучаюЗначениеСТипом(СтрокаТип) Экспорт
	Ожидаем.Что(""+СтрокаТип, СтрШаблон("Ожидаем, что был передан параметр %1 с типом %2, а это не так",
		ИсходныйПараметр, ТипИсходногоПараметра)).Равно(""+ТипИсходногоПараметра);
КонецПроцедуры

//я в втором параметре получаю значение с типом Число"
Процедура ЯВВторомПараметреПолучаюЗначениеСТипом(СтрокаТип) Экспорт
	Ожидаем.Что(""+СтрокаТип, СтрШаблон("Ожидаем, что был передан параметр %1 с типом %2, а это не так",
		ИсходныйПараметр2, ТипИсходногоПараметра2)).Равно(""+ТипИсходногоПараметра2);
КонецПроцедуры

//я в первом параметре получаю значение 1
Процедура ЯВПервомПараметреПолучаюЗначение(Парам1) Экспорт
	Ожидаем.Что(Парам1, СтрШаблон("Ожидаем, что был передан параметр %1, а это не так",
		ИсходныйПараметр)).Равно(ИсходныйПараметр);
КонецПроцедуры

//я в втором параметре получаю значение "Строка1"
Процедура ЯВВторомПараметреПолучаюЗначение(Парам1) Экспорт
	Ожидаем.Что(Парам1, СтрШаблон("Ожидаем, что был передан параметр %1, а это не так",
		ИсходныйПараметр2)).Равно(ИсходныйПараметр2);
КонецПроцедуры

Процедура ДобавитьВЖурнал(Строка, Параметр = "", Параметр2 = "") Экспорт
	Журнал.Вставить(КлючЖурнала, Журнал[КлючЖурнала]+Строка+";");

	Представление = СтрШаблон("                нахожусь внутри шага %1 %2, %3", Строка,
		ПредставлениеПараметра(Параметр), ПредставлениеПараметра(Параметр2));
КонецПроцедуры

Функция ПредставлениеПараметра(Параметр)
	Возврат ?(ПустаяСтрока(Параметр), "", "<"+Параметр+">");
КонецФункции

КлючЖурнала = (Новый Файл(ТекущийСценарий().Источник)).ИмяБезРасширения;
//Журнал = Новый Соответствие;
Журнал.Вставить(КлючЖурнала, "");
