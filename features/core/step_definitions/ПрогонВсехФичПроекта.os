#Использовать logos

Перем Лог;
Перем БДД;

Перем ПомощникТестирования;
Перем НаборФичКаталогаПроекта;

Функция ПолучитьСписокШагов(КонтекстФреймворкаBDD) Экспорт
	БДД = КонтекстФреймворкаBDD;

	ВсеШаги = Новый Массив;

	ВсеШаги.Добавить("ЯВыполнилПодключениеТестовогоСкрипта");
	ВсеШаги.Добавить("ЯПолучилНаборФичИзКаталогаФичПроектаИсключаяТекущуюФичу");
	ВсеШаги.Добавить("УстановилКаталогаФичПроектаКакТекущий");
	ВсеШаги.Добавить("ПроверкаПоведенияКаждойФичиИзНабораФичЗакончиласьСКодомВозврата");

	Возврат ВсеШаги;
КонецФункции

//я выполнил подключение тестового скрипта "ПроверкаГенерации"
Процедура ЯВыполнилПодключениеТестовогоСкрипта(ИмяСкрипта) Экспорт
	 ПомощникТестирования = ЗагрузитьСценарий(ОбъединитьПути(ТекущийСценарий().Каталог, ИмяСкрипта+".os"));

	 ДопЛог = Логирование.ПолучитьЛог(ПомощникТестирования.ИмяЛога());
	 ДопЛог.УстановитьУровень(Лог.Уровень());
КонецПроцедуры

//я получил набор фич из каталога фич проекта исключая текущую фичу
Процедура ЯПолучилНаборФичИзКаталогаФичПроектаИсключаяТекущуюФичу() Экспорт
	 НаборФичКаталогаПроекта = НайтиФайлы(КаталогФич().ПолноеИмя, "*.feature");
	 ФайлТекущегоСценария = Новый Файл(ТекущийСценарий().Источник);
	 Номер = -1;
	 Для каждого ФайлФичи Из НаборФичКаталогаПроекта Цикл
		 Номер = Номер + 1;
		Если ФайлФичи.ИмяБезРасширения = ФайлТекущегоСценария.ИмяБезРасширения Тогда
	 		НаборФичКаталогаПроекта.Удалить(Номер);
			Прервать;
	 	КонецЕсли;
	 КонецЦикла;
КонецПроцедуры

//проверка поведения каждой фичи из набора фич закончилась с кодом возврата 0
Процедура ПроверкаПоведенияКаждойФичиИзНабораФичЗакончиласьСКодомВозврата(ОжидаемыйКодВозврата) Экспорт
	МассивОшибочныхФич = Новый Массив;
	Для каждого ФайлФичи Из НаборФичКаталогаПроекта Цикл
		ИмяФичи = ФайлФичи.ИмяБезРасширения;
		Лог.Информация("Проверяю фичу "+ИмяФичи);
		Попытка
			ПомощникТестирования.ПроверкаПоведенияФичиЗакончиласьСКодомВозврата(ИмяФичи, ОжидаемыйКодВозврата);
		Исключение
			МассивОшибочныхФич.Добавить(ИмяФичи);
		КонецПопытки;
	КонецЦикла;
	Если ЗначениеЗаполнено(МассивОшибочныхФич) Тогда
		Лог.Информация("Ошибочные фичи:");
		Для каждого ИмяФичи Из МассивОшибочныхФич Цикл
			Лог.Информация("Фича - "+ИмяФичи);
		КонецЦикла;
		ВызватьИсключение "Есть упавшие фичи";
	КонецЕсли;
КонецПроцедуры

//установил каталога фич проекта как текущий
Процедура УстановилКаталогаФичПроектаКакТекущий() Экспорт
	УстановитьТекущийКаталог(КаталогФич().ПолноеИмя);
КонецПроцедуры

Функция КаталогФич()
	Возврат Новый Файл(ОбъединитьПути(ТекущийСценарий().Каталог, ".."));
КонецФункции // КаталогФич()

Лог = Логирование.ПолучитьЛог("bdd.ВыполнениеФич.feature");
//Лог.УстановитьУровень(УровниЛога.Отладка);
