// Реализация шагов BDD-фич/сценариев c помощью фреймворка https://github.com/artbear/1bdd
#Использовать 1commands

Перем БДД; //контекст фреймворка 1bdd
Перем Лог;

// Метод выдает список шагов, реализованных в данном файле-шагов
Функция ПолучитьСписокШагов(КонтекстФреймворкаBDD) Экспорт
	БДД = КонтекстФреймворкаBDD;

	ВсеШаги = Новый Массив;

	ВсеШаги.Добавить("ЯОчищаюПараметрыКомандыВКонтексте");
	ВсеШаги.Добавить("ЯВключаюОтладкуЛогаСИменем");
	ВсеШаги.Добавить("ЯВыключаюОтладкуЛогаСИменем");
	ВсеШаги.Добавить("ЯВыполняюКоманду");
	ВсеШаги.Добавить("ВыводКомандыСодержит");
	ВсеШаги.Добавить("КодВозвратаКомандыРавен");
	ВсеШаги.Добавить("ЯВыполняюКомандуCПараметрами");
	ВсеШаги.Добавить("ЯСообщаюВыводКоманды");
	ВсеШаги.Добавить("ЯДобавляюПараметрДляКоманды");
	ВсеШаги.Добавить("ВыводКомандыНеСодержит");
	ВсеШаги.Добавить("ЯПоказываюВыводКоманды");
	ВсеШаги.Добавить("ЯВижуВКонсолиВывод");
	ВсеШаги.Добавить("ЯНеВижуВКонсолиВывод");
	ВсеШаги.Добавить("КодВозвратаРавен");

	Возврат ВсеШаги;
КонецФункции

// Реализация шагов

// Процедура выполняется перед запуском каждого сценария
Процедура ПередЗапускомСценария(Знач Узел) Экспорт
	
КонецПроцедуры

// Процедура выполняется после завершения каждого сценария
Процедура ПослеЗапускаСценария(Знач Узел) Экспорт
	
КонецПроцедуры

//Я очищаю параметры команды "git" в контексте
Процедура ЯОчищаюПараметрыКомандыВКонтексте(Знач ИмяКоманды) Экспорт
	Лог.Отладка("ЯОчищаюПараметрыКомандыВКонтексте Создаю команду ИмяКоманды %1", ИмяКоманды);

	КлючКонтекста = КлючКоманды(ИмяКоманды);
	Команда = Новый Команда;
	Команда.ПоказыватьВыводНемедленно(Истина);
	Лог.Отладка("Устанавливаю признак немедленного показа вывода");

	Команда.УстановитьКоманду(ИмяКоманды);
	БДД.СохранитьВКонтекст(КлючКонтекста, Команда);
	БДД.СохранитьВКонтекст(КлючПоследнейКоманды(), Команда);
КонецПроцедуры

//я включаю отладку лога с именем "bdd"
Процедура ЯВключаюОтладкуЛогаСИменем(Знач ИмяЛога) Экспорт
    НужныйЛог = Логирование.ПолучитьЛог(ИмяЛога);
	НужныйЛог.УстановитьУровень(УровниЛога.Отладка);
КонецПроцедуры

//я выключаю отладку лога с именем "bdd"
Процедура ЯВыключаюОтладкуЛогаСИменем(Знач ИмяЛога) Экспорт
    НужныйЛог = Логирование.ПолучитьЛог(ИмяЛога);
	НужныйЛог.УстановитьУровень(УровниЛога.Информация);
КонецПроцедуры

//Я выполняю команду "git"
Процедура ЯВыполняюКоманду(Знач ИмяИлиТекстКоманды) Экспорт
	Команда = ПолучитьКомандуИзКонтекста(ИмяИлиТекстКоманды);
	
	Команда.Исполнить();
	
КонецПроцедуры

//Я выполняю команду "git" c параметрами "--version"
Процедура ЯВыполняюКомандуCПараметрами(Знач ИмяКоманды, Знач ПараметрыКоманды) Экспорт
	Команда = ПолучитьКомандуИзКонтекста(ИмяКоманды);

	ПараметрыКоманды = ЗаменитьШаблоныВПараметрахКоманды(ПараметрыКоманды);
	Команда.УстановитьПараметры(ПараметрыКоманды);

	Лог.Отладка("Выполняю команду <%1> с параметрами <%2>", ИмяКоманды, ПараметрыКоманды);

	Команда.Исполнить();
КонецПроцедуры

//Я добавляю параметр "--version" для команды "git"
Процедура ЯДобавляюПараметрДляКоманды(Знач ПараметрКоманды, Знач ИмяКоманды) Экспорт
	Команда = БДД.ПолучитьИзКонтекста(КлючКоманды(ИмяКоманды));

	ПараметрКоманды = ЗаменитьШаблоныВПараметрахКоманды(ПараметрКоманды);
	Команда.ДобавитьПараметр(ПараметрКоманды);
КонецПроцедуры

//Вывод команды "git" содержит "[--version]"
Процедура ВыводКомандыСодержит(Знач ИмяКоманды, Знач ОжидаемыйВыводКоманды) Экспорт
	Команда = БДД.ПолучитьИзКонтекста(КлючКоманды(ИмяКоманды));
	
	ВыводКоманды = Команда.ПолучитьВывод();
	Ожидаем.Что(ВыводКоманды).Содержит(ОжидаемыйВыводКоманды);
КонецПроцедуры

//Вывод команды "oscript" не содержит "КаталогПроекта"
Процедура ВыводКомандыНеСодержит(Знач ИмяКоманды, Знач ОжидаемыйВыводКоманды) Экспорт
	Команда = БДД.ПолучитьИзКонтекста(КлючКоманды(ИмяКоманды));
	
	ВыводКоманды = Команда.ПолучитьВывод();
	Ожидаем.Что(ВыводКоманды).Не_().Содержит(ОжидаемыйВыводКоманды);
КонецПроцедуры

//Код возврата команды "git" равен 1
Процедура КодВозвратаКомандыРавен(Знач ИмяКоманды, Знач ОжидаемыйКодВозврата) Экспорт
	
	Команда = БДД.ПолучитьИзКонтекста(КлючКоманды(ИмяКоманды));

	Ожидаем.Что(Команда.ПолучитьКодВозврата(), "Код возврата").Равно(ОжидаемыйКодВозврата);
КонецПроцедуры

//Я сообщаю вывод команды "git"
Процедура ЯСообщаюВыводКоманды(Знач ИмяКоманды) Экспорт
	Команда = БДД.ПолучитьИзКонтекста(КлючКоманды(ИмяКоманды));
	
	ВыводКоманды = Команда.ПолучитьВывод();
	Сообщить(ВыводКоманды);
КонецПроцедуры

//я вижу в консоли вывод "лог команды"
Процедура ЯВижуВКонсолиВывод(Знач ОжидаемыйВыводКоманды) Экспорт
	Команда = БДД.ПолучитьИзКонтекста(КлючПоследнейКоманды());
	
	ВыводКоманды = Команда.ПолучитьВывод();
	Ожидаем.Что(ВыводКоманды).Содержит(ОжидаемыйВыводКоманды);
КонецПроцедуры

//я не вижу в консоли вывод "Несуществующий вывод команды"
Процедура ЯНеВижуВКонсолиВывод(Знач ОжидаемыйВыводКоманды) Экспорт
	Команда = БДД.ПолучитьИзКонтекста(КлючПоследнейКоманды());
	
	ВыводКоманды = Команда.ПолучитьВывод();
	Ожидаем.Что(ВыводКоманды).Не_().Содержит(ОжидаемыйВыводКоманды);
КонецПроцедуры

//Я показываю вывод команды
Процедура ЯПоказываюВыводКоманды() Экспорт
	Команда = БДД.ПолучитьИзКонтекста(КлючПоследнейКоманды());
	
	ВыводКоманды = Команда.ПолучитьВывод();
	Сообщить(ВыводКоманды);
КонецПроцедуры

//Код возврата равен 0
Процедура КодВозвратаРавен(Знач ОжидаемыйКодВозврата) Экспорт
	Команда = БДД.ПолучитьИзКонтекста(КлючПоследнейКоманды());

	Ожидаем.Что(Команда.ПолучитьКодВозврата(), "Код возврата").Равно(ОжидаемыйКодВозврата);
КонецПроцедуры

// { Служебные функции
Функция ПолучитьКомандуИзКонтекста(Знач ИмяКоманды)
	КлючКонтекста = КлючКоманды(ИмяКоманды);
	Лог.Отладка("ПолучитьКомандуИзКонтекста Имя команды %1", ИмяКоманды);
	Лог.Отладка("ПолучитьКомандуИзКонтекста КлючКонтекста %1", КлючКонтекста);

	Команда = БДД.ПолучитьИзКонтекста(КлючКонтекста);

	Если Не ЗначениеЗаполнено(Команда) Тогда
		ЯОчищаюПараметрыКомандыВКонтексте(ИмяКоманды);
		Команда = БДД.ПолучитьИзКонтекста(КлючКонтекста);
	КонецЕсли;
	
	Возврат Команда;
КонецФункции

Функция КлючКоманды(Знач ИмяКоманды)
	Возврат "Команда-" + ИмяКоманды;
КонецФункции

Функция КлючПоследнейКоманды()
	Возврат "ПоследняяКоманда";
КонецФункции

Функция ЗаменитьШаблоныВПараметрахКоманды(Знач ПараметрыКоманды)
	Рез = СтрЗаменить(ПараметрыКоманды, "<КаталогПроекта>", БДД.КаталогПроверяемогоПроекта());
	Рез = СтрЗаменить(Рез, "<РабочийКаталог>", БДД.ПолучитьИзКонтекста("РабочийКаталог"));
	Возврат Рез;
КонецФункции
//}

Лог = Логирование.ПолучитьЛог("bdd");
